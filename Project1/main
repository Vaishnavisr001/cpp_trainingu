#ifndef TOKEN_H
#define TOKEN_H

#include <string>

// This enum defines the different types of tokens
// that the lexer can identify from a BASIC program line.
enum class TokenType {
    NUMBER,        // e.g., 10, 123, 3
    STRING,        // Text inside quotes, e.g., "HELLO"
    IDENTIFIER,    // Variable names or labels, e.g., A, X1
    KEYWORD,       // Commands like PRINT, INPUT, IF, etc.
    SYMBOL,        // Characters like +, -, =, (, )
    COMMENT,       // Comments starting with REM
    END_OF_LINE    // Special token to mark end of the line
};

// Token holds the type, actual text, and position in the line
struct Token {
    TokenType type;        // What kind of token this is
    std::string value;     // The actual content (like "PRINT" or "10")
    size_t position;       // Where in the line this token starts

    // Constructor to set values when creating a token
    Token(TokenType t, const std::string& v, size_t pos)
        : type(t), value(v), position(pos) {}
};

#endif // TOKEN_H

